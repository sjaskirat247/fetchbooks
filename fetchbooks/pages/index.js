import Head from "next/head";
import Container from "@mui/material/Container";
import Paper from "@mui/material/Paper";
import TextField from "@mui/material/TextField";
import Button from "@mui/material/Button";
import Grid from "@mui/material/Grid";
import Alert from "@mui/material/Alert";
import AlertTitle from "@mui/material/AlertTitle";
import NavBar from "../components/NavBar";
import Title from "../components/Title";
import FavouriteBooks from "../components/FavouriteBooks";
import { useState } from "react";

const FAVOURITE_BOOKS = [
  {
    title: "Harry Potter and the Philosopher's Stone",
    author: "J.K. Rowling",
    rating: 9,
  },
  {
    title: "The Great Gatsby",
    author: "F. Scott Fitzgerald",
    rating: 8,
  },
];

export default function Home() {
  const [title, setTitle] = useState("");
  const [author, setAuthor] = useState("");
  const [rating, setRating] = useState("");
  const [books, setFavoriteBooks] = useState(FAVOURITE_BOOKS);
  const [errorMsg, setErrorMsg] = useState("");

  const [filterText, setFilterText] = useState("");

  const formSubmit = (event) => {
    event.preventDefault();
    if (title.trim().length === 0) {
      setErrorMsg(" please fill the required field. Title can not be empty. ");
      return;
    }
    if (author.trim().length === 0) {
      setErrorMsg(
        " please fill the required field. Author can not be empty.  "
      );
      return;
    }

    const parsedRating = parseInt(rating);
    if (parsedRating < 1 || parsedRating > 10 || isNaN(parsedRating)) {
      setErrorMsg("Rating should be between 1 to 10 only");
      return;
    }

    const myBook = {
      title: title,
      author: author,
      rating: rating,
    };

    setFavoriteBooks([...books, myBook]);

    setTitle("");
    setAuthor("");
    setRating("");
    setErrorMsg("");
  };

  const filteredBooksCollection = books.filter((book) =>
    book.title.toLowerCase().includes(filterText.toLowerCase())
  );

  return (
    <div>
      <Head>
        <title>Library App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar title={"Our Library"} />
      <main>
        <Container sx={{ paddingTop: "2rem" }} maxWidth="md">
          <Paper
            sx={{
              p: 2,
              display: "flex",
              flexDirection: "column",
              marginBottom: "2rem",
            }}
          >
            <Title>Add a New Favourite</Title>
            <form onSubmit={formSubmit}>
              <Grid container spacing={3}>
                <Grid item xs={12} sm={6}>
                  <TextField
                    required
                    id="title"
                    name="title"
                    label="Book Title"
                    fullWidth
                    variant="standard"
                    value={title}
                    onChange={(e) => setTitle(e.target.value)}
                  />
                </Grid>
                <Grid item xs={10} sm={3}>
                  <TextField
                    required
                    id="author"
                    name="author"
                    label="Author"
                    fullWidth
                    variant="standard"
                    value={author}
                    onChange={(e) => setAuthor(e.target.value)}
                  />
                </Grid>
                <Grid item xs={10} sm={2}>
                  <TextField
                    required
                    id="rating"
                    name="rating"
                    label="Rating"
                    fullWidth
                    variant="standard"
                    value={rating}
                    onChange={(e) => setRating(e.target.value)}
                  />
                </Grid>
                <Grid item xs={2} sm={2}>
                  <Button
                    type="submit"
                    variant="contained"
                    sx={{ mt: 1.5, ml: 1 }}
                  >
                    Add
                  </Button>
                </Grid>
                <Grid item xs={10}>
                  {errorMsg !== "" && (
                    <Alert severity="error">
                      <AlertTitle>Error:</AlertTitle>
                      {errorMsg}
                    </Alert>
                  )}
                </Grid>
              </Grid>
            </form>
            <TextField
              label="Search by Title"
              variant="standard"
              value={filterText}
              onChange={(e) => setFilterText(e.target.value)}
            />
          </Paper>
          <FavouriteBooks books={filteredBooksCollection} />
        </Container>
      </main>
    </div>
  );
}
